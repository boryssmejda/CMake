#include "mathOp.h"

// Necessary headers are included using the precompiled headers generated by cmake

namespace
{
    bool wouldOverflow(int a, int b) noexcept
    {
        const int MAX_INT = std::numeric_limits<int>::max();

        if ((b < 0) && (a > MAX_INT + b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    bool wouldUnderFlow(int a, int b)
    {
        const int MIN_INT = std::numeric_limits<int>::min();

        if((b > 0) && (a < MIN_INT + b))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

int mathOp::Arithmetic::subtract(int a, int b)
{
    fmt::print("Subtraction for a = {} and b = {}\n", a, b);
    if(wouldOverflow(a, b))
    {
        throw std::invalid_argument("Subtraction would result in integer overflow!\n");
    }
    else if(wouldUnderFlow(a, b))
    {
        throw std::invalid_argument("Subtraction would result in integer underflow!\n");
    }
    else
    {
        return a - b;
    }
}